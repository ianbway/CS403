; Ian Braudaway
; CS403 Assign 3, Task 5

(include "streams.scm")

(define (interthreeve s1 s2 s3)
	(cons-stream (stream-car s1)
		(cons-stream (stream-car s2) 
			(cons-stream (stream-car s3) 
				(interthreeve (stream-cdr s1) (stream-cdr s2) (stream-cdr s3)))))
	)

(define (acc-stream stream op) 
	(cons-stream (stream-car stream)
		(acc-stream (cons-stream (op (stream-car stream) (stream-car (stream-cdr stream))) (stream-cdr (stream-cdr stream))) op))
	)

(define (smush stream op)
	(define acc-stream-created (acc-stream stream op))
	(interthreeve indices stream acc-stream-created)
	)

(define (main)
	(setPort (open (getElement ScamArgs 1) 'read))
	(define env this)
	(define (iter expr)
		(if (not (eof?)) (begin (eval expr env) (iter (readExpr)))))
	(iter (readExpr))
	)

; (define ones (cons-stream 1 ones))
; (sdisplay 12 (smush ones +))
; (println)

; (include "random.lib")
; (randomSeed 36)
; (define (rs) (cons-stream (randomRange -99 100) (rs)))
; (define s (rs))
; (define op (getElement (list + - *) (randomRange 0 3)))
; (inspect op)
; (define t (smush s op))
; (sdisplay 12 s) (println)
; (sdisplay 12 t) (println)

; (include "random.lib")
; (randomSeed 46)
; (define (rs) (cons-stream (randomRange -99 100) (rs)))
; (define s (rs))
; (define op (getElement (list + - *) (randomRange 0 3)))
; (inspect op)
; (define t (smush s op))
; (sdisplay 12 s) (println)
; (sdisplay 12 t) (println)

; (include "random.lib")
; (randomSeed 56)
; (define (rs) (cons-stream (randomRange -99 100) (rs)))
; (define s (rs))
; (define op (getElement (list + - *) (randomRange 0 3)))
; (inspect op)
; (define t (smush s op))
; (sdisplay 12 s) (println)
; (sdisplay 12 t) (println)

; (include "random.lib")
; (randomSeed 66)
; (define (rs) (cons-stream (randomRange -99 100) (rs)))
; (define s (rs))
; (define op (getElement (list + - *) (randomRange 0 3)))
; (inspect op)
; (define t (smush s op))
; (sdisplay 12 s) (println)
; (sdisplay 12 t) (println)

; (include "random.lib")
; (randomSeed 76)
; (define (rs) (cons-stream (randomRange -99 100) (rs)))
; (define s (rs))
; (define op (getElement (list + - *) (randomRange 0 3)))
; (inspect op)
; (define t (smush s op))
; (sdisplay 12 s) (println)
; (sdisplay 12 t) (println)

; (include "random.lib")
; (randomSeed 86)
; (define (rs) (cons-stream (randomRange -99 100) (rs)))
; (define s (rs))
; (define op (getElement (list + - *) (randomRange 0 3)))
; (inspect op)
; (define t (smush s op))
; (sdisplay 12 s) (println)
; (sdisplay 12 t) (println)

; (include "random.lib")
; (randomSeed 96)
; (define (rs) (cons-stream (randomRange -99 100) (rs)))
; (define s (rs))
; (define op (getElement (list + - *) (randomRange 0 3)))
; (inspect op)
; (define t (smush s op))
; (sdisplay 12 s) (println)
; (sdisplay 12 t) (println)

; (include "random.lib")
; (randomSeed 106)
; (define (rs) (cons-stream (randomRange -99 100) (rs)))
; (define s (rs))
; (define op (getElement (list + - *) (randomRange 0 3)))
; (inspect op)
; (define t (smush s op))
; (sdisplay 12 s) (println)
; (sdisplay 12 t) (println)

; (include "random.lib")
; (randomSeed 116)
; (define (rs) (cons-stream (randomRange -99 100) (rs)))
; (define s (rs))
; (define op (getElement (list + - *) (randomRange 0 3)))
; (inspect op)
; (define t (smush s op))
; (sdisplay 12 s) (println)
; (sdisplay 12 t) (println)

