; Ian Braudaway
; CS403 Assign 3, Task 3

(define (block v pp np)
	(define (setPrevious prevPointer)
		(set 'pp prevPointer)
		)

	(define (setNext nextPointer)
		(set 'np nextPointer)
		)

	(define (getPrevious)
		pp
		)

	(define (getNext)
		np
		)

	(define (getValue)
		v
		)

	this
	)

(define (deque)
	(define front nil)
	(define back nil)
	(define size 0)

	(define (enqueueFront v)
		(define newBlock (block v nil nil))
		(cond
			((valid? front)
				((newBlock'setNext) front)
				((front'setPrevious) newBlock)
				(set 'front newBlock)
				(set 'size (+ size 1))
				)
			(else
				(set 'size 1)
				(set 'front newBlock)
				(set 'back newBlock)
				)
			)
		v
		)

	(define (enqueueBack v)
		(define newBlock (block v nil nil))
		(cond
			((valid? front)
				((newBlock'setPrevious) back)
				((back'setNext) newBlock)
				(set 'back newBlock)
				(set 'size (+ size 1))
				)
			(else
				(set 'size 1)
				(set 'front newBlock)
				(set 'back newBlock)
				)
			)
		v
		)

	(define (enumerateEnqueue qFront index count value)
		(cond
			((= index count)
				(define next ((qFront'getNext)))
				(define newBlock (block value qFront next))
				((qFront'setNext) newBlock)
				(cond
					((= index size)
						(set 'back newBlock)
						)
					(else
						((next'setPrevious) newBlock)
						)
					)
				)
			(else
				(enumerateEnqueue ((qFront'getNext)) index (+ count 1) value)
				)
			)
		)

	(define (enqueueIndex index value)
		(cond
			((= index 0)
				(enqueueFront value)
				)
			(else
				(enumerateEnqueue front index 1 value)
				(set 'size (+ size 1))
				)
			)
		value
		)

	(define (dequeueFront)
		(define v ((front'getValue)))
		(set 'front ((front'getNext)))
		(set 'size (- size 1))
		v
		)

	(define (dequeueBack)
		(define v ((back'getValue)))
		(set 'back ((back'getPrevious)))
		(set 'size (- size 1))
		(cond
			((= size 0)
				(set 'front nil))
			(else
				((back'setNext) nil)
				)
			)
		v
		)

	(define (enumerateDequeue qBack index count)
		(cond
			((= index count)
				(define next ((qBack'getNext)))
				(define previous ((qBack'getPrevious)))
				(define value ((qBack'getValue)))
				((next'setPrevious) previous)
				(set 'size (- size 1))
				(cond
					((= count 0)
						(set 'front next)
						)
					(else
						((previous'setNext) next)
						)
					)
				value
				)
			(else
				(enumerateDequeue ((qBack'getPrevious)) index (- count 1))
				)
			)
		)

	(define (dequeueIndex index)
		(cond
			((= index (- size 1))
				(dequeueBack)
				)
			(else
				(enumerateDequeue ((back'getPrevious)) index (- size 2))
				)
			)
		)

	(define (enumerateDisplay front)
		(cond
			((valid? front)
				(print ((front'getValue)))
				(cond
					((valid? ((front'getNext)))
						(print ",")
						(enumerateDisplay ((front'getNext))))
					(else
						'done
						)
					)
				)
			(else
				'done
				)
			)
		)

	(define (display)
		(print "[")
		(enumerateDisplay front)
		(print "]")
		)

	(define (peekFront)
		((front'getValue))
		)

	(define (peekBack)
		((back'getValue))
		)
		
	this
	)

(define (main)
	(setPort (open (getElement ScamArgs 1) 'read))
	(define env this)
	(define (iter expr)
		(if (not (eof?)) (begin (eval expr env) (iter (readExpr)))))
	(iter (readExpr))
	)

; (newline)
; (define dq (deque))
; ((dq'enqueueFront) 3)
; ((dq'enqueueBack) 5)
; ((dq'enqueueIndex) 1 4)
; ((dq'display))
; (println)

; (define dq (deque))
; ((dq'enqueueIndex) 0 47)
; ((dq'enqueueIndex) 0 58)
; ((dq'enqueueIndex) 1 36)
; ((dq'enqueueIndex) 3 94)
; ((dq'enqueueIndex) 3 95)
; ((dq'enqueueIndex) 4 79)
; ((dq'enqueueIndex) 6 94)
; ((dq'enqueueIndex) 7 33)
; ((dq'enqueueIndex) 8 83)
; ((dq'enqueueIndex) 1 72)
; ((dq'display))
; (println)

; (define dq (deque))
; ((dq'enqueueIndex) 0 13)
; ((dq'enqueueIndex) 0 31)
; ((dq'enqueueIndex) 1 10)
; ((dq'enqueueIndex) 1 44)
; ((dq'enqueueIndex) 4 81)
; ((dq'enqueueIndex) 2 89)
; ((dq'enqueueIndex) 3 50)
; ((dq'enqueueIndex) 2 42)
; ((dq'enqueueIndex) 6 95)
; ((dq'enqueueIndex) 0 37)
; ((dq'display))
; (println)
; ((dq'dequeueIndex) 6)
; ((dq'display))
; (println)
; ((dq'dequeueIndex) 3)
; ((dq'display))
; (println)
; ((dq'dequeueIndex) 5)
; ((dq'display))
; (println)
; ((dq'dequeueIndex) 1)
; ((dq'display))
; (println)
; ((dq'dequeueIndex) 4)
; ((dq'display))
; (println)
; ((dq'dequeueIndex) 3)
; ((dq'display))
; (println)
; ((dq'dequeueIndex) 3)
; ((dq'display))
; (println)
; ((dq'dequeueIndex) 1)
; ((dq'display))
; (println)
; ((dq'dequeueIndex) 0)
; ((dq'display))
; (println)
; ((dq'dequeueIndex) 0)
; ((dq'display))
; (println)

; (define dq (deque))
; ((dq'enqueueIndex) 0 25)
; ((dq'enqueueIndex) 0 49)
; ((dq'enqueueIndex) 2 73)
; ((dq'enqueueIndex) 2 84)
; ((dq'enqueueIndex) 4 22)
; ((dq'enqueueIndex) 2 10)
; ((dq'enqueueIndex) 3 52)
; ((dq'enqueueIndex) 5 50)
; ((dq'enqueueIndex) 0 18)
; ((dq'enqueueIndex) 5 48)
; ((dq'display))
; (println)
; ((dq'dequeueIndex) 8)
; ((dq'display))
; (println)
; ((dq'dequeueIndex) 8)
; ((dq'display))
; (println)
; ((dq'dequeueIndex) 2)
; ((dq'display))
; (println)
; ((dq'dequeueIndex) 6)
; ((dq'display))
; (println)
; ((dq'dequeueIndex) 0)
; ((dq'display))
; (println)
; ((dq'dequeueIndex) 2)
; ((dq'display))
; (println)
; ((dq'dequeueIndex) 1)
; ((dq'display))
; (println)
; ((dq'dequeueIndex) 2)
; ((dq'display))
; (println)
; ((dq'dequeueIndex) 0)
; ((dq'display))
; (println)
; ((dq'dequeueIndex) 0)
; ((dq'display))
; (println)
; ((dq'display))
; (println)
; ((dq'enqueueIndex) 0 67)
; ((dq'enqueueIndex) 0 10)
; ((dq'enqueueIndex) 0 99)
; ((dq'enqueueIndex) 2 69)
; ((dq'enqueueIndex) 4 62)
; ((dq'enqueueIndex) 4 34)
; ((dq'enqueueIndex) 4 34)
; ((dq'enqueueIndex) 5 37)
; ((dq'enqueueIndex) 6 81)
; ((dq'enqueueIndex) 4 31)
; ((dq'display))
; (println)
; ((dq'dequeueIndex) 2)
; ((dq'display))
; (println)
; ((dq'dequeueIndex) 2)
; ((dq'display))
; (println)
; ((dq'dequeueIndex) 1)
; ((dq'display))
; (println)
; ((dq'dequeueIndex) 3)
; ((dq'display))
; (println)
; ((dq'dequeueIndex) 0)
; ((dq'display))
; (println)
; ((dq'dequeueIndex) 1)
; ((dq'display))
; (println)
; ((dq'dequeueIndex) 0)
; ((dq'display))
; (println)
; ((dq'dequeueIndex) 1)
; ((dq'display))
; (println)
; ((dq'dequeueIndex) 0)
; ((dq'display))
; (println)
; ((dq'dequeueIndex) 0)
; ((dq'display))
; (println)

; (define dq (deque))
; ((dq'enqueueIndex) 0 59)
; ((dq'enqueueIndex) 1 20)
; ((dq'enqueueIndex) 2 28)
; ((dq'enqueueIndex) 3 48)
; ((dq'enqueueIndex) 2 13)
; ((dq'enqueueIndex) 3 98)
; ((dq'enqueueIndex) 3 67)
; ((dq'enqueueIndex) 0 89)
; ((dq'enqueueIndex) 6 51)
; ((dq'enqueueIndex) 5 62)
; ((dq'enqueueIndex) 5 81)
; ((dq'enqueueIndex) 7 83)
; ((dq'enqueueIndex) 11 64)
; ((dq'enqueueIndex) 12 47)
; ((dq'enqueueIndex) 3 25)
; ((dq'enqueueIndex) 2 12)
; ((dq'enqueueIndex) 12 82)
; ((dq'enqueueIndex) 2 67)
; ((dq'enqueueIndex) 0 94)
; ((dq'enqueueIndex) 1 55)
; ((dq'enqueueIndex) 20 73)
; ((dq'enqueueIndex) 10 52)
; ((dq'enqueueIndex) 7 59)
; ((dq'enqueueIndex) 8 18)
; ((dq'enqueueIndex) 0 92)
; ((dq'enqueueIndex) 17 56)
; ((dq'enqueueIndex) 19 36)
; ((dq'enqueueIndex) 9 60)
; ((dq'enqueueIndex) 26 31)
; ((dq'enqueueIndex) 29 20)
; ((dq'enqueueIndex) 12 22)
; ((dq'enqueueIndex) 4 21)
; ((dq'enqueueIndex) 31 36)
; ((dq'enqueueIndex) 26 96)
; ((dq'enqueueIndex) 7 85)
; ((dq'enqueueIndex) 17 28)
; ((dq'enqueueIndex) 20 96)
; ((dq'enqueueIndex) 25 90)
; ((dq'enqueueIndex) 19 13)
; ((dq'enqueueIndex) 39 56)
; ((dq'enqueueIndex) 39 69)
; ((dq'enqueueIndex) 1 69)
; ((dq'enqueueIndex) 41 44)
; ((dq'enqueueIndex) 9 87)
; ((dq'enqueueIndex) 28 27)
; ((dq'enqueueIndex) 45 13)
; ((dq'enqueueIndex) 15 21)
; ((dq'enqueueIndex) 7 36)
; ((dq'enqueueIndex) 20 94)
; ((dq'enqueueIndex) 12 68)
; ((dq'enqueueIndex) 39 75)
; ((dq'enqueueIndex) 44 39)
; ((dq'enqueueIndex) 36 58)
; ((dq'enqueueIndex) 11 28)
; ((dq'enqueueIndex) 31 27)
; ((dq'enqueueIndex) 40 57)
; ((dq'enqueueIndex) 48 79)
; ((dq'enqueueIndex) 11 83)
; ((dq'enqueueIndex) 8 47)
; ((dq'enqueueIndex) 40 79)
; ((dq'enqueueIndex) 37 69)
; ((dq'enqueueIndex) 50 95)
; ((dq'enqueueIndex) 49 97)
; ((dq'enqueueIndex) 15 28)
; ((dq'enqueueIndex) 59 55)
; ((dq'enqueueIndex) 56 72)
; ((dq'enqueueIndex) 15 74)
; ((dq'enqueueIndex) 1 93)
; ((dq'enqueueIndex) 17 30)
; ((dq'enqueueIndex) 9 84)
; ((dq'enqueueIndex) 30 87)
; ((dq'enqueueIndex) 25 36)
; ((dq'enqueueIndex) 46 58)
; ((dq'enqueueIndex) 7 80)
; ((dq'enqueueIndex) 71 80)
; ((dq'enqueueIndex) 42 61)
; ((dq'enqueueIndex) 33 42)
; ((dq'enqueueIndex) 41 30)
; ((dq'enqueueIndex) 26 79)
; ((dq'enqueueIndex) 34 32)
; ((dq'enqueueIndex) 22 36)
; ((dq'enqueueIndex) 77 56)
; ((dq'enqueueIndex) 0 96)
; ((dq'enqueueIndex) 37 33)
; ((dq'enqueueIndex) 16 62)
; ((dq'enqueueIndex) 7 66)
; ((dq'enqueueIndex) 38 49)
; ((dq'enqueueIndex) 80 16)
; ((dq'enqueueIndex) 87 11)
; ((dq'enqueueIndex) 77 94)
; ((dq'enqueueIndex) 72 47)
; ((dq'enqueueIndex) 46 31)
; ((dq'enqueueIndex) 72 13)
; ((dq'enqueueIndex) 43 20)
; ((dq'enqueueIndex) 77 90)
; ((dq'enqueueIndex) 34 18)
; ((dq'enqueueIndex) 18 37)
; ((dq'enqueueIndex) 59 27)
; ((dq'enqueueIndex) 26 14)
; ((dq'enqueueIndex) 45 51)
; ((dq'enqueueIndex) 63 58)
; ((dq'enqueueIndex) 8 16)
; ((dq'enqueueIndex) 100 10)
; ((dq'enqueueIndex) 15 96)
; ((dq'enqueueIndex) 2 10)
; ((dq'display))
; (println)
; ((dq'dequeueIndex) 93)
; ((dq'display))
; (println)
; ((dq'dequeueIndex) 85)
; ((dq'display))
; (println)
; ((dq'dequeueIndex) 43)
; ((dq'display))
; (println)
; ((dq'dequeueIndex) 41)
; ((dq'display))
; (println)
; ((dq'dequeueIndex) 5)
; ((dq'display))
; (println)
; ((dq'dequeueIndex) 19)
; ((dq'display))
; (println)
; ((dq'dequeueIndex) 43)
; ((dq'display))
; (println)
; ((dq'dequeueIndex) 50)
; ((dq'display))
; (println)
; ((dq'dequeueIndex) 29)
; ((dq'display))
; (println)
; ((dq'dequeueIndex) 24)
; ((dq'display))
; (println)
; ((dq'dequeueIndex) 38)
; ((dq'display))
; (println)
; ((dq'dequeueIndex) 62)
; ((dq'display))
; (println)
; ((dq'dequeueIndex) 32)
; ((dq'display))
; (println)
; ((dq'dequeueIndex) 55)
; ((dq'display))
; (println)
; ((dq'dequeueIndex) 88)
; ((dq'display))
; (println)
; ((dq'dequeueIndex) 85)
; ((dq'display))
; (println)
; ((dq'dequeueIndex) 70)
; ((dq'display))
; (println)
; ((dq'dequeueIndex) 21)
; ((dq'display))
; (println)
; ((dq'dequeueIndex) 86)
; ((dq'display))
; (println)
; ((dq'dequeueIndex) 21)
; ((dq'display))
; (println)
; ((dq'dequeueIndex) 59)
; ((dq'display))
; (println)
; ((dq'dequeueIndex) 52)
; ((dq'display))
; (println)
; ((dq'dequeueIndex) 66)
; ((dq'display))
; (println)
; ((dq'dequeueIndex) 64)
; ((dq'display))
; (println)
; ((dq'dequeueIndex) 56)
; ((dq'display))
; (println)
; ((dq'dequeueIndex) 62)
; ((dq'display))
; (println)
; ((dq'dequeueIndex) 62)
; ((dq'display))
; (println)
; ((dq'dequeueIndex) 66)
; ((dq'display))
; (println)
; ((dq'dequeueIndex) 56)
; ((dq'display))
; (println)
; ((dq'dequeueIndex) 61)
; ((dq'display))
; (println)
; ((dq'dequeueIndex) 64)
; ((dq'display))
; (println)
; ((dq'dequeueIndex) 46)
; ((dq'display))
; (println)
; ((dq'dequeueIndex) 45)
; ((dq'display))
; (println)
; ((dq'dequeueIndex) 20)
; ((dq'display))
; (println)
; ((dq'dequeueIndex) 2)
; ((dq'display))
; (println)
; ((dq'dequeueIndex) 47)
; ((dq'display))
; (println)
; ((dq'dequeueIndex) 32)
; ((dq'display))
; (println)
; ((dq'dequeueIndex) 32)
; ((dq'display))
; (println)
; ((dq'dequeueIndex) 13)
; ((dq'display))
; (println)
; ((dq'dequeueIndex) 51)
; ((dq'display))
; (println)
; ((dq'dequeueIndex) 47)
; ((dq'display))
; (println)
; ((dq'dequeueIndex) 38)
; ((dq'display))
; (println)
; ((dq'dequeueIndex) 28)
; ((dq'display))
; (println)
; ((dq'dequeueIndex) 4)
; ((dq'display))
; (println)
; ((dq'dequeueIndex) 12)
; ((dq'display))
; (println)
; ((dq'dequeueIndex) 25)
; ((dq'display))
; (println)
; ((dq'dequeueIndex) 1)
; ((dq'display))
; (println)
; ((dq'dequeueIndex) 0)
; ((dq'display))
; (println)
; ((dq'dequeueIndex) 38)
; ((dq'display))
; (println)
; ((dq'dequeueIndex) 1)
; ((dq'display))
; (println)
; ((dq'dequeueIndex) 14)
; ((dq'display))
; (println)
; ((dq'dequeueIndex) 20)
; ((dq'display))
; (println)
; ((dq'dequeueIndex) 34)
; ((dq'display))
; (println)
; ((dq'dequeueIndex) 2)
; ((dq'display))
; (println)
; ((dq'dequeueIndex) 8)
; ((dq'display))
; (println)
; ((dq'dequeueIndex) 17)
; ((dq'display))
; (println)
; ((dq'dequeueIndex) 40)
; ((dq'display))
; (println)
; ((dq'dequeueIndex) 45)
; ((dq'display))
; (println)
; ((dq'dequeueIndex) 9)
; ((dq'display))
; (println)
; ((dq'dequeueIndex) 25)
; ((dq'display))
; (println)
; ((dq'dequeueIndex) 33)
; ((dq'display))
; (println)
; ((dq'dequeueIndex) 2)
; ((dq'display))
; (println)
; ((dq'dequeueIndex) 8)
; ((dq'display))
; (println)
; ((dq'dequeueIndex) 15)
; ((dq'display))
; (println)
; ((dq'dequeueIndex) 13)
; ((dq'display))
; (println)
; ((dq'dequeueIndex) 8)
; ((dq'display))
; (println)
; ((dq'dequeueIndex) 2)
; ((dq'display))
; (println)
; ((dq'dequeueIndex) 31)
; ((dq'display))
; (println)
; ((dq'dequeueIndex) 25)
; ((dq'display))
; (println)
; ((dq'dequeueIndex) 9)
; ((dq'display))
; (println)
; ((dq'dequeueIndex) 20)
; ((dq'display))
; (println)
; ((dq'dequeueIndex) 14)
; ((dq'display))
; (println)
; ((dq'dequeueIndex) 28)
; ((dq'display))
; (println)
; ((dq'dequeueIndex) 1)
; ((dq'display))
; (println)
; ((dq'dequeueIndex) 15)
; ((dq'display))
; (println)
; ((dq'dequeueIndex) 1)
; ((dq'display))
; (println)
; ((dq'dequeueIndex) 13)
; ((dq'display))
; (println)
; ((dq'dequeueIndex) 14)
; ((dq'display))
; (println)
; ((dq'dequeueIndex) 1)
; ((dq'display))
; (println)
; ((dq'dequeueIndex) 3)
; ((dq'display))
; (println)
; ((dq'dequeueIndex) 13)
; ((dq'display))
; (println)
; ((dq'dequeueIndex) 7)
; ((dq'display))
; (println)
; ((dq'dequeueIndex) 11)
; ((dq'display))
; (println)
; ((dq'dequeueIndex) 3)
; ((dq'display))
; (println)
; ((dq'dequeueIndex) 7)
; ((dq'display))
; (println)
; ((dq'dequeueIndex) 13)
; ((dq'display))
; (println)
; ((dq'dequeueIndex) 9)
; ((dq'display))
; (println)
; ((dq'dequeueIndex) 3)
; ((dq'display))
; (println)
; ((dq'dequeueIndex) 10)
; ((dq'display))
; (println)
; ((dq'dequeueIndex) 11)
; ((dq'display))
; (println)
; ((dq'dequeueIndex) 11)
; ((dq'display))
; (println)
; ((dq'dequeueIndex) 5)
; ((dq'display))
; (println)
; ((dq'dequeueIndex) 10)
; ((dq'display))
; (println)
; ((dq'dequeueIndex) 11)
; ((dq'display))
; (println)
; ((dq'dequeueIndex) 8)
; ((dq'display))
; (println)
; ((dq'dequeueIndex) 1)
; ((dq'display))
; (println)
; ((dq'dequeueIndex) 1)
; ((dq'display))
; (println)
; ((dq'dequeueIndex) 6)
; ((dq'display))
; (println)
; ((dq'dequeueIndex) 6)
; ((dq'display))
; (println)
; ((dq'dequeueIndex) 5)
; ((dq'display))
; (println)
; ((dq'dequeueIndex) 0)
; ((dq'display))
; (println)
; ((dq'dequeueIndex) 2)
; ((dq'display))
; (println)
; ((dq'dequeueIndex) 0)
; ((dq'display))
; (println)
; ((dq'dequeueIndex) 1)
; ((dq'display))
; (println)
; ((dq'dequeueIndex) 0)
; ((dq'display))
; (println)
; ((dq'display))
; (println)
; ((dq'enqueueIndex) 0 99)
; ((dq'enqueueIndex) 0 35)
; ((dq'enqueueIndex) 0 28)
; ((dq'enqueueIndex) 3 44)
; ((dq'enqueueIndex) 3 98)
; ((dq'enqueueIndex) 4 45)
; ((dq'enqueueIndex) 3 97)
; ((dq'enqueueIndex) 0 30)
; ((dq'enqueueIndex) 6 45)
; ((dq'enqueueIndex) 0 73)
; ((dq'enqueueIndex) 1 22)
; ((dq'enqueueIndex) 10 95)
; ((dq'enqueueIndex) 0 78)
; ((dq'enqueueIndex) 0 65)
; ((dq'enqueueIndex) 0 95)
; ((dq'enqueueIndex) 3 84)
; ((dq'enqueueIndex) 15 33)
; ((dq'enqueueIndex) 2 99)
; ((dq'enqueueIndex) 8 94)
; ((dq'enqueueIndex) 7 27)
; ((dq'enqueueIndex) 19 22)
; ((dq'enqueueIndex) 13 49)
; ((dq'enqueueIndex) 2 64)
; ((dq'enqueueIndex) 15 86)
; ((dq'enqueueIndex) 24 70)
; ((dq'enqueueIndex) 14 22)
; ((dq'enqueueIndex) 21 50)
; ((dq'enqueueIndex) 2 89)
; ((dq'enqueueIndex) 6 20)
; ((dq'enqueueIndex) 14 34)
; ((dq'enqueueIndex) 2 73)
; ((dq'enqueueIndex) 3 10)
; ((dq'enqueueIndex) 31 30)
; ((dq'enqueueIndex) 0 49)
; ((dq'enqueueIndex) 5 44)
; ((dq'enqueueIndex) 22 17)
; ((dq'enqueueIndex) 19 30)
; ((dq'enqueueIndex) 19 67)
; ((dq'enqueueIndex) 32 26)
; ((dq'enqueueIndex) 19 85)
; ((dq'enqueueIndex) 35 14)
; ((dq'enqueueIndex) 41 70)
; ((dq'enqueueIndex) 21 16)
; ((dq'enqueueIndex) 24 75)
; ((dq'enqueueIndex) 8 15)
; ((dq'enqueueIndex) 0 33)
; ((dq'enqueueIndex) 35 20)
; ((dq'enqueueIndex) 13 75)
; ((dq'enqueueIndex) 16 35)
; ((dq'enqueueIndex) 8 55)
; ((dq'enqueueIndex) 34 81)
; ((dq'enqueueIndex) 30 27)
; ((dq'enqueueIndex) 1 20)
; ((dq'enqueueIndex) 45 87)
; ((dq'enqueueIndex) 16 39)
; ((dq'enqueueIndex) 38 24)
; ((dq'enqueueIndex) 21 70)
; ((dq'enqueueIndex) 48 90)
; ((dq'enqueueIndex) 44 45)
; ((dq'enqueueIndex) 37 95)
; ((dq'enqueueIndex) 27 66)
; ((dq'enqueueIndex) 13 29)
; ((dq'enqueueIndex) 46 54)
; ((dq'enqueueIndex) 60 17)
; ((dq'enqueueIndex) 50 19)
; ((dq'enqueueIndex) 39 50)
; ((dq'enqueueIndex) 60 26)
; ((dq'enqueueIndex) 44 93)
; ((dq'enqueueIndex) 20 53)
; ((dq'enqueueIndex) 54 63)
; ((dq'enqueueIndex) 57 53)
; ((dq'enqueueIndex) 53 27)
; ((dq'enqueueIndex) 11 62)
; ((dq'enqueueIndex) 6 91)
; ((dq'enqueueIndex) 73 74)
; ((dq'enqueueIndex) 65 48)
; ((dq'enqueueIndex) 26 16)
; ((dq'enqueueIndex) 50 17)
; ((dq'enqueueIndex) 44 62)
; ((dq'enqueueIndex) 13 40)
; ((dq'enqueueIndex) 56 78)
; ((dq'enqueueIndex) 64 63)
; ((dq'enqueueIndex) 78 49)
; ((dq'enqueueIndex) 43 31)
; ((dq'enqueueIndex) 78 36)
; ((dq'enqueueIndex) 71 75)
; ((dq'enqueueIndex) 67 61)
; ((dq'enqueueIndex) 81 93)
; ((dq'enqueueIndex) 13 11)
; ((dq'enqueueIndex) 75 21)
; ((dq'enqueueIndex) 66 72)
; ((dq'enqueueIndex) 51 16)
; ((dq'enqueueIndex) 71 28)
; ((dq'enqueueIndex) 14 39)
; ((dq'enqueueIndex) 75 39)
; ((dq'enqueueIndex) 64 53)
; ((dq'enqueueIndex) 9 51)
; ((dq'enqueueIndex) 7 13)
; ((dq'enqueueIndex) 89 63)
; ((dq'enqueueIndex) 28 84)
; ((dq'enqueueIndex) 90 19)
; ((dq'enqueueIndex) 56 70)
; ((dq'enqueueIndex) 70 53)
; ((dq'enqueueIndex) 63 86)
; ((dq'enqueueIndex) 52 49)
; ((dq'display))
; (println)
; ((dq'dequeueIndex) 102)
; ((dq'display))
; (println)
; ((dq'dequeueIndex) 23)
; ((dq'display))
; (println)
; ((dq'dequeueIndex) 14)
; ((dq'display))
; (println)
; ((dq'dequeueIndex) 54)
; ((dq'display))
; (println)
; ((dq'dequeueIndex) 29)
; ((dq'display))
; (println)
; ((dq'dequeueIndex) 90)
; ((dq'display))
; (println)
; ((dq'dequeueIndex) 73)
; ((dq'display))
; (println)
; ((dq'dequeueIndex) 43)
; ((dq'display))
; (println)
; ((dq'dequeueIndex) 22)
; ((dq'display))
; (println)
; ((dq'dequeueIndex) 50)
; ((dq'display))
; (println)
; ((dq'dequeueIndex) 73)
; ((dq'display))
; (println)
; ((dq'dequeueIndex) 85)
; ((dq'display))
; (println)
; ((dq'dequeueIndex) 1)
; ((dq'display))
; (println)
; ((dq'dequeueIndex) 80)
; ((dq'display))
; (println)
; ((dq'dequeueIndex) 33)
; ((dq'display))
; (println)
; ((dq'dequeueIndex) 8)
; ((dq'display))
; (println)
; ((dq'dequeueIndex) 81)
; ((dq'display))
; (println)
; ((dq'dequeueIndex) 24)
; ((dq'display))
; (println)
; ((dq'dequeueIndex) 60)
; ((dq'display))
; (println)
; ((dq'dequeueIndex) 16)
; ((dq'display))
; (println)
; ((dq'dequeueIndex) 8)
; ((dq'display))
; (println)
; ((dq'dequeueIndex) 49)
; ((dq'display))
; (println)
; ((dq'dequeueIndex) 25)
; ((dq'display))
; (println)
; ((dq'dequeueIndex) 53)
; ((dq'display))
; (println)
; ((dq'dequeueIndex) 21)
; ((dq'display))
; (println)
; ((dq'dequeueIndex) 79)
; ((dq'display))
; (println)
; ((dq'dequeueIndex) 11)
; ((dq'display))
; (println)
; ((dq'dequeueIndex) 67)
; ((dq'display))
; (println)
; ((dq'dequeueIndex) 64)
; ((dq'display))
; (println)
; ((dq'dequeueIndex) 48)
; ((dq'display))
; (println)
; ((dq'dequeueIndex) 23)
; ((dq'display))
; (println)
; ((dq'dequeueIndex) 59)
; ((dq'display))
; (println)
; ((dq'dequeueIndex) 63)
; ((dq'display))
; (println)
; ((dq'dequeueIndex) 32)
; ((dq'display))
; (println)
; ((dq'dequeueIndex) 24)
; ((dq'display))
; (println)
; ((dq'dequeueIndex) 10)
; ((dq'display))
; (println)
; ((dq'dequeueIndex) 24)
; ((dq'display))
; (println)
; ((dq'dequeueIndex) 5)
; ((dq'display))
; (println)
; ((dq'dequeueIndex) 40)
; ((dq'display))
; (println)
; ((dq'dequeueIndex) 39)
; ((dq'display))
; (println)
; ((dq'dequeueIndex) 39)
; ((dq'display))
; (println)
; ((dq'dequeueIndex) 24)
; ((dq'display))
; (println)
; ((dq'dequeueIndex) 31)
; ((dq'display))
; (println)
; ((dq'dequeueIndex) 38)
; ((dq'display))
; (println)
; ((dq'dequeueIndex) 15)
; ((dq'display))
; (println)
; ((dq'dequeueIndex) 52)
; ((dq'display))
; (println)
; ((dq'dequeueIndex) 42)
; ((dq'display))
; (println)
; ((dq'dequeueIndex) 9)
; ((dq'display))
; (println)
; ((dq'dequeueIndex) 8)
; ((dq'display))
; (println)
; ((dq'dequeueIndex) 23)
; ((dq'display))
; (println)
; ((dq'dequeueIndex) 19)
; ((dq'display))
; (println)
; ((dq'dequeueIndex) 13)
; ((dq'display))
; (println)
; ((dq'dequeueIndex) 0)
; ((dq'display))
; (println)
; ((dq'dequeueIndex) 34)
; ((dq'display))
; (println)
; ((dq'dequeueIndex) 46)
; ((dq'display))
; (println)
; ((dq'dequeueIndex) 13)
; ((dq'display))
; (println)
; ((dq'dequeueIndex) 31)
; ((dq'display))
; (println)
; ((dq'dequeueIndex) 2)
; ((dq'display))
; (println)
; ((dq'dequeueIndex) 6)
; ((dq'display))
; (println)
; ((dq'dequeueIndex) 22)
; ((dq'display))
; (println)
; ((dq'dequeueIndex) 30)
; ((dq'display))
; (println)
; ((dq'dequeueIndex) 19)
; ((dq'display))
; (println)
; ((dq'dequeueIndex) 12)
; ((dq'display))
; (println)
; ((dq'dequeueIndex) 23)
; ((dq'display))
; (println)
; ((dq'dequeueIndex) 36)
; ((dq'display))
; (println)
; ((dq'dequeueIndex) 25)
; ((dq'display))
; (println)
; ((dq'dequeueIndex) 27)
; ((dq'display))
; (println)
; ((dq'dequeueIndex) 9)
; ((dq'display))
; (println)
; ((dq'dequeueIndex) 26)
; ((dq'display))
; (println)
; ((dq'dequeueIndex) 11)
; ((dq'display))
; (println)
; ((dq'dequeueIndex) 29)
; ((dq'display))
; (println)
; ((dq'dequeueIndex) 11)
; ((dq'display))
; (println)
; ((dq'dequeueIndex) 22)
; ((dq'display))
; (println)
; ((dq'dequeueIndex) 10)
; ((dq'display))
; (println)
; ((dq'dequeueIndex) 29)
; ((dq'display))
; (println)
; ((dq'dequeueIndex) 28)
; ((dq'display))
; (println)
; ((dq'dequeueIndex) 6)
; ((dq'display))
; (println)
; ((dq'dequeueIndex) 19)
; ((dq'display))
; (println)
; ((dq'dequeueIndex) 2)
; ((dq'display))
; (println)
; ((dq'dequeueIndex) 9)
; ((dq'display))
; (println)
; ((dq'dequeueIndex) 2)
; ((dq'display))
; (println)
; ((dq'dequeueIndex) 11)
; ((dq'display))
; (println)
; ((dq'dequeueIndex) 14)
; ((dq'display))
; (println)
; ((dq'dequeueIndex) 2)
; ((dq'display))
; (println)
; ((dq'dequeueIndex) 2)
; ((dq'display))
; (println)
; ((dq'dequeueIndex) 10)
; ((dq'display))
; (println)
; ((dq'dequeueIndex) 6)
; ((dq'display))
; (println)
; ((dq'dequeueIndex) 13)
; ((dq'display))
; (println)
; ((dq'dequeueIndex) 9)
; ((dq'display))
; (println)
; ((dq'dequeueIndex) 7)
; ((dq'display))
; (println)
; ((dq'dequeueIndex) 3)
; ((dq'display))
; (println)
; ((dq'dequeueIndex) 3)
; ((dq'display))
; (println)
; ((dq'dequeueIndex) 12)
; ((dq'display))
; (println)
; ((dq'dequeueIndex) 6)
; ((dq'display))
; (println)
; ((dq'dequeueIndex) 8)
; ((dq'display))
; (println)
; ((dq'dequeueIndex) 8)
; ((dq'display))
; (println)
; ((dq'dequeueIndex) 1)
; ((dq'display))
; (println)
; ((dq'dequeueIndex) 4)
; ((dq'display))
; (println)
; ((dq'dequeueIndex) 0)
; ((dq'display))
; (println)
; ((dq'dequeueIndex) 5)
; ((dq'display))
; (println)
; ((dq'dequeueIndex) 4)
; ((dq'display))
; (println)
; ((dq'dequeueIndex) 3)
; ((dq'display))
; (println)
; ((dq'dequeueIndex) 0)
; ((dq'display))
; (println)
; ((dq'dequeueIndex) 1)
; ((dq'display))
; (println)
; ((dq'dequeueIndex) 0)
; ((dq'display))
; (println)

; (include "random.lib")
; (randomSeed 2077)
; (define dq (deque))
; (define (upfront dq n)
; 	(define value (randomRange 10 100))
; 	(cond
; 		((= n 0)
; 			((dq'enqueueFront) value)
; 			)
; 		((< (dq'size) 10)
; 			((dq'enqueueFront) value)
; 			(upfront dq (- n 1))
; 			)
; 		(else
; 			((dq'enqueueIndex) (randomRange 2 10) value)
; 			(upfront dq (- n 1))
; 			)
; 		)
; 	)
; (define (frontback dq n)
; 	(define (remove x mode)
; 		(cond
; 			((= x n) (println "...]"))
; 			(else
; 				(print ((dq mode)) ",")
; 				(remove (+ x 1) mode)
; 				)
; 			)
; 		)
; 	;((dq'display)) (println)
; 	(print "[")
; 	(remove 0 'dequeueFront)
; 	(print "[")
; 	(remove 0 'dequeueBack)
; 	)
; (upfront dq 3043)
; (frontback dq 20)

; (include "random.lib")
; (randomSeed 2087)
; (define dq (deque))
; (define (upback dq n)
; 	(define value (randomRange 10 100))
; 	(cond
; 		((= n 0)
; 			((dq'enqueueBack) value)
; 			)
; 		(else
; 			((dq'enqueueBack) value)
; 			(upback dq (- n 1))
; 			)
; 		)
; 	)
; (define (frontback dq n)
; 	(define (remove x mode)
; 		(cond
; 			((= x n) (println "...]"))
; 			(else
; 				(print ((dq mode)) ",")
; 				(remove (+ x 1) mode)
; 				)
; 			)
; 		)
; 	;((dq'display)) (println)
; 	(print "[")
; 	(remove 0 'dequeueFront)
; 	(print "[")
; 	(remove 0 'dequeueBack)
; 	)
; (upback dq 3056)
; (frontback dq 20)

; (include "random.lib")
; (randomSeed 2097)
; (define dq (deque))
; (define (upfront dq n)
; 	(define value (randomRange 10 100))
; 	(cond
; 		((= n 0)
; 			((dq'enqueueFront) value)
; 			)
; 		((< (dq'size) 10)
; 			((dq'enqueueFront) value)
; 			(upfront dq (- n 1))
; 			)
; 		(else
; 			((dq'enqueueIndex) (randomRange 2 10) value)
; 			(upfront dq (- n 1))
; 			)
; 		)
; 	)
; (define (upback dq n)
; 	(define value (randomRange 10 100))
; 	(cond
; 		((= n 0)
; 			((dq'enqueueBack) value)
; 			)
; 		(else
; 			((dq'enqueueBack) value)
; 			(upback dq (- n 1))
; 			)
; 		)
; 	)
; (define (downfront dq n)
; 	(cond
; 		((= n 0)
; 			((dq'dequeueFront))
; 			)
; 		(else
; 			((dq'dequeueFront))
; 			(downfront dq (- n 1))
; 			)
; 		)
; 	)
; (upfront dq 2524)
; (upback dq 2563)
; (downfront dq 4950)
; ((dq'display)) (println)

; (include "random.lib")
; (randomSeed 2107)
; (define dq (deque))
; (define (upback dq n)
; 	(define value (randomRange 10 100))
; 	(cond
; 		((= n 0)
; 			((dq'enqueueBack) value)
; 			)
; 		(else
; 			((dq'enqueueBack) value)
; 			(upback dq (- n 1))
; 			)
; 		)
; 	)
; (define (upfront dq n)
; 	(define value (randomRange 10 100))
; 	(cond
; 		((= n 0)
; 			((dq'enqueueFront) value)
; 			)
; 		((< (dq'size) 10)
; 			((dq'enqueueFront) value)
; 			(upfront dq (- n 1))
; 			)
; 		(else
; 			((dq'enqueueIndex) (randomRange 2 10) value)
; 			(upfront dq (- n 1))
; 			)
; 		)
; 	)
; (define (downback dq n)
; 	(cond
; 		((or (= n 0) (< (dq'size) 10))
; 			((dq'dequeueIndex) 0)
; 			)
; 		(else
; 			((dq'dequeueIndex) (- (dq'size) (randomRange 2 10)))
; 			(downback dq (- n 1))
; 			)
; 		)
; 	)
; (upback dq 1297)
; (upfront dq 1298)
; (downback dq 2450)
; ((dq'display)) (println)

; (include "random.lib")
; (randomSeed 2117)
; (define dq (deque))
; (define (upfront dq n)
; 	(define value (randomRange 10 100))
; 	(cond
; 		((= n 0)
; 			((dq'enqueueFront) value)
; 			)
; 		((< (dq'size) 10)
; 			((dq'enqueueFront) value)
; 			(upfront dq (- n 1))
; 			)
; 		(else
; 			((dq'enqueueIndex) (randomRange 2 10) value)
; 			(upfront dq (- n 1))
; 			)
; 		)
; 	)
; (define (upback dq n)
; 	(define value (randomRange 10 100))
; 	(cond
; 		((= n 0)
; 			((dq'enqueueBack) value)
; 			)
; 		(else
; 			((dq'enqueueBack) value)
; 			(upback dq (- n 1))
; 			)
; 		)
; 	)
; (define (downback dq n)
; 	(cond
; 		((or (= n 0) (< (dq'size) 10))
; 			((dq'dequeueIndex) 0)
; 			)
; 		(else
; 			((dq'dequeueIndex) (- (dq'size) (randomRange 2 10)))
; 			(downback dq (- n 1))
; 			)
; 		)
; 	)
; (define (downfront dq n)
; 	(cond
; 		((= n 0)
; 			((dq'dequeueFront))
; 			)
; 		(else
; 			((dq'dequeueFront))
; 			(downfront dq (- n 1))
; 			)
; 		)
; 	)
; (upback dq 1290)
; (upfront dq 1272)
; (downback dq 1245)
; (downfront dq 1245)
; ((dq'display)) (println)
