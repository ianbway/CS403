program : def | 
          def program

def : var | 
      funcDef

expression : unary | 
             unary operator expression | 
             unary comparator expression

operator : PLUS | 
           MINUS | 
           MULTIPLY | 
           DIVIDE

comparator : LESS_THAN |
             LESS_THAN_EQUAL |
             EQUAL |
             GREATER_THAN |
             GREATER_THAN_EQUAL

unary : NUMBER |
        VARIABLE |
        OPEN_BRACKET expression CLOSE_BRACKET |
        MINUS unary

list : item |
       list COMMA item

item : unary |
       *empty*

product : product |
          unary MULTIPLY product

quotient : quotient |
           unary DIVIDE quotient |
           quotient DIVIDE unary

sum : sum |
      unary PLUS sum

difference : difference |
             unary MINUS difference |
             difference MINUS unary

if : IF OPEN_BRACKET expression CLOSE_BRACKET block elses

elses : ELSE block finally |
        ELSE if |
        *empty*

finally: block |
         *empty*

while : WHILE OPEN_BRACKET expression CLOSE_BRACKET block

block : OPEN_BRACKET OPEN_BRACKET statements CLOSE_BRACKET CLOSE_BRACKET |
        OPEN_BRACKET OPEN_BRACKET statements return CLOSE_BRACKET CLOSE_BRACKET

return : VARIABLE |
         NUMBER |
         MINUS NUMBER

statements : statement |
             statement statements

statement :  expression BAR |
             if |
             while

var : VAR_NAME EQUAL VAR_VALUE BAR

funcDef : FUNCTION VARIABLE OPEN_BRACKET list CLOSE_BRACKET block

funcCall : VARIABLE OPEN_BRACKET CLOSE_BRACKET |
           VARIABLE OPEN_BRACKET item CLOSE_BRACKET |
           VARIABLE OPEN_BRACKET list CLOSE_BRACKET

comment : HASH * HASH |
          HASH HASH * HASH HASH |
          *empty*